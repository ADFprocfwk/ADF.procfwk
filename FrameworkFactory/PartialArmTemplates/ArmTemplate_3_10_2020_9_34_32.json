{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "FrameworkFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BootStrap')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Stages",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Create New Execution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[procfwk].[GetProcessStages]",
								"storedProcedureParameters": {
									"ExecutionId": {
										"type": "Guid",
										"value": {
											"value": "@activity('Create New Execution').output.firstRow.ExecutionId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "GetSetMetadata",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Stages",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Stages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Stages').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Stage Executor",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Log Stage Start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Executor",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageId": {
												"value": "@item().StageId",
												"type": "Expression"
											},
											"ExecutionId": {
												"value": "@activity('Create New Execution').output.firstRow.ExecutionId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Log Stage Start",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[procfwk].[SetLogStageStart]",
										"storedProcedureParameters": {
											"ExecutionId": {
												"value": {
													"value": "@activity('Create New Execution').output.firstRow.ExecutionId",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"StageId": {
												"value": {
													"value": "@item().StageId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SupportDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Create New Execution",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[procfwk].[CreateNewExecution]",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "GetSetMetadata",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Update Execution Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Stages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[procfwk].[UpdateExecutionLog]"
						},
						"linkedServiceName": {
							"referenceName": "SupportDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Framework"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetSetMetadata')]",
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]",
				"[concat(variables('factoryId'), '/pipelines/Executor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Child 1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"folder": {
					"name": "Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Child 2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"folder": {
					"name": "Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Child 3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"folder": {
					"name": "Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Child 4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"folder": {
					"name": "Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Child 5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"folder": {
					"name": "Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Child 6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"folder": {
					"name": "Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Executor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipelines",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[procfwk].[GetPipelinesInStage]",
								"storedProcedureParameters": {
									"StageId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.StageId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "GetSetMetadata",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipelines",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pipelines",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Pipelines').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Execute Pipeline",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Set Body",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Log Pipeline Running",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "ExecutePipeline",
										"method": "POST",
										"body": {
											"value": "@variables('FunctionBody')",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "PipelineExecutor",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Body",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Pipeline Params",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FunctionBody",
										"value": {
											"value": "@concat('\n{\n\t\"tenantId\": \"929039b9-c19d-425e-993b-1e3fda155876\",\n\t\"applicationId\": \"014f610f-0800-4039-bf65-c71091be2582\",\n\t\"authenticationKey\": \"AjRcla.DWhqilqS5LZJxk3-]_fVbOz66\",\n\t\"subscriptionId\": \"77a3e40b-dd36-433c-90ca-a09f39724af3\",\n\t\"resourceGroup\": \"CommunityDemos\",\n\t\"factoryName\": \"PaulsFunFactoryV2\",\n\t\"pipelineName\": \"',item().PipelineName,'\"',activity('Get Pipeline Params').output.firstRow.Params,'\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Pipeline Params",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[procfwk].[GetPipelineParameters]",
											"storedProcedureParameters": {
												"PipelineId": {
													"type": "Int32",
													"value": {
														"value": "@item().PipelineId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "GetSetMetadata",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Log Pipeline Running",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[procfwk].[SetLogPipelineRunning]",
										"storedProcedureParameters": {
											"ExecutionId": {
												"value": {
													"value": "@pipeline().parameters.ExecutionId",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"PipelineId": {
												"value": {
													"value": "@item().PipelineId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StageId": {
												"value": {
													"value": "@pipeline().parameters.StageId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SupportDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log Pipeline Success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Execute Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[procfwk].[SetLogPipelineSuccess]",
										"storedProcedureParameters": {
											"ExecutionId": {
												"value": {
													"value": "@pipeline().parameters.ExecutionId",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"PipelineId": {
												"value": {
													"value": "@item().PipelineId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StageId": {
												"value": {
													"value": "@pipeline().parameters.StageId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SupportDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log Pipeline Failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Execute Pipeline",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[procfwk].[SetLogPipelineFailed]",
										"storedProcedureParameters": {
											"ExecutionId": {
												"value": {
													"value": "@pipeline().parameters.ExecutionId",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"PipelineId": {
												"value": {
													"value": "@item().PipelineId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StageId": {
												"value": {
													"value": "@pipeline().parameters.StageId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SupportDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"StageId": {
						"type": "int"
					},
					"ExecutionId": {
						"type": "string"
					}
				},
				"variables": {
					"FunctionBody": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetSetMetadata')]",
				"[concat(variables('factoryId'), '/linkedServices/PipelineExecutor')]",
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Grandparent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Framework Processing",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BootStrap",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BootStrap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSetMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SupportDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipelineExecutor')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://pipelineexecutor.azurewebsites.net",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Keys",
							"type": "LinkedServiceReference"
						},
						"secretName": "ExecutorFunctionAppKey"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupportDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Keys",
							"type": "LinkedServiceReference"
						},
						"secretName": "SupportDatabaseConnectionString"
					}
				}
			},
			"dependsOn": []
		}
	]
}